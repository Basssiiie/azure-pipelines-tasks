'use strict';

import { ServiceClient } from "azure-pipelines-tasks-azure-arm-rest-v2/AzureServiceClient";

class KeyVaultClient {


    constructor(_: ServiceClient, private keyVaultUrl) {

    }

    public getSecrets (nextLink, callback) : void {
        console.log("keyVaultClient.getSecrets is called");
        if (!callback) {
        throw new Error('callback cannot be null.');
        }
        // Validate
        try
        {

        if (this.keyVaultUrl === null || this.keyVaultUrl === undefined || typeof this.keyVaultUrl.valueOf() !== 'string') {
            throw new Error('keyVaultUrl cannot be null or undefined and it must be of type string.');
        }
        } catch (error) {
        callback(error);
        }
    
        let secrets = [
                        {
                            name: "secret1",
                            enabled: true,
                            expires: null,
                            contentType: "secret"
                        },
                        {
                            name: "secret2",
                            enabled: true,
                            expires: null,
                            contentType: "secret"
                        },
                        {
                            name: "secret3",
                            enabled: true,
                            expires: null,
                            contentType: "certificate"
                        },
                        {
                            name: "secret4",
                            enabled: false,
                            expires: null,
                            contentType: "certificate"
                        }
                    ];
        callback(null, secrets);
    };
  
    public getSecretValue (secretName, callback) : void {
        console.log("getSecretValue is called for " + secretName);
    
        if (!callback) {
        throw new Error('callback cannot be null.');
        }
        if (secretName === null || secretName === undefined || typeof secretName.valueOf() !== 'string') {
        throw new Error('secretName cannot be null or undefined and it must be of type string.');
        }
    
        callback(null, secretName + "-value");
    };
}

exports.KeyVaultClient = KeyVaultClient;